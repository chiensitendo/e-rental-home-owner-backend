server:
  port: 8081
security.jwt.token.secret-key: ${SECRET_KEY}
spring:
  datasource:
    url: jdbc:postgresql://${DEV_DATABASE_URL}
    username: ${DEV_DATABASE_USERNAME}
    password: ${DEV_DATABASE_PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 223430095187-sva9l8mf35tj9avi9kpfi9bogm4ogehi.apps.googleusercontent.com
            clientSecret: TFhk8O0Hjnqhxohyi6VE6bXI
            redirectUri: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 121189305185277
            clientSecret: 42ffe5aa7379e8326387e0fe16f34132
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - emails
              - public_profile

app:
  oauth2:
    authorizedRedirectUris:
      - ${CLIENT_URL}/oauth2/redirect
      - ${CLIENT_URL}/oauth/redirect